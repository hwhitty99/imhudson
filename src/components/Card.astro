---
import { Icon } from 'astro-icon/components';
import Badge from './Badge.astro';

interface Props {
    title: string;
    link: string;
    external?: boolean;
    badges?: { [color: string]: string[] };
}

const { title, link, external = false, badges = {} } = Astro.props as Props;
---

<section
    x-data="{ shown: false }"
    x-intersect.once.full="shown = true"
    class="flex min-h-[100px]"
>
    <div
        class="flex w-full cursor-pointer flex-col gap-4 rounded-2xl bg-black-900 p-6 hover:bg-black-800"
        x-show="shown"
        x-transition.origin.bottom.duration.700ms
        @click={external
            ? `window.open('${link}', '_blank')`
            : `window.location.pathname='${link}'`}
    >
        <a
            href={link}
            target={external && '_blank'}
            class="group flex w-fit items-center"
            @click.stop
        >
            <h2 class="text-xl font-bold">{title}</h2>
            <Icon
                name="ic:round-arrow-right"
                class="transition-transform group-hover:translate-x-1"
                size="32"
            />
        </a>
        <div class="flex flex-wrap gap-2">
            {
                Object.entries(badges).map(([color, badgeTexts]) =>
                    badgeTexts.map((badge) => (
                        <Badge text={badge} color={color} />
                    ))
                )
            }
        </div>
        <slot />
    </div>
</section>
